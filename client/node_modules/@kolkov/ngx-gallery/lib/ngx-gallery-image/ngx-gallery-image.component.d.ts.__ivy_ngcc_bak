import { ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { DomSanitizer, SafeStyle } from '@angular/platform-browser';
import { NgxGalleryService } from '../ngx-gallery.service';
import { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image';
import { NgxGalleryAction } from '../ngx-gallery-action';
declare type Orientation = ('slideLeft' | 'slideRight' | 'fade' | 'rotateLeft' | 'rotateRight' | 'zoom' | 'none');
export declare class NgxGalleryImageComponent implements OnInit, OnChanges {
    private sanitization;
    private changeDetectorRef;
    private elementRef;
    private helperService;
    images: NgxGalleryOrderedImage[];
    clickable: boolean;
    _selectedIndex: any;
    set selectedIndex(index: number);
    arrows: boolean;
    arrowsAutoHide: boolean;
    swipe: boolean;
    animation: string;
    size: string;
    arrowPrevIcon: string;
    arrowNextIcon: string;
    autoPlay: boolean;
    autoPlayInterval: number;
    autoPlayPauseOnHover: boolean;
    infinityMove: boolean;
    lazyLoading: boolean;
    actions: NgxGalleryAction[];
    descriptions: string[];
    showDescription: boolean;
    bullets: boolean;
    imageClick: EventEmitter<any>;
    activeChange: EventEmitter<any>;
    animating: EventEmitter<any>;
    canChangeImage: boolean;
    action: Orientation;
    isAnimating: boolean;
    private timer;
    constructor(sanitization: DomSanitizer, changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef, helperService: NgxGalleryService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    reset(index: number): void;
    getImages(): NgxGalleryOrderedImage[];
    startAutoPlay(): void;
    stopAutoPlay(): void;
    handleClick(event: Event, index: number): void;
    show(index: number): void;
    setAction(action: Orientation): void;
    showNext(): boolean;
    showPrev(): void;
    setChangeTimeout(): void;
    canShowNext(): boolean;
    canShowPrev(): boolean;
    getSafeUrl(image: string): SafeStyle;
    getFileType(fileSource: string): string;
    onStart(event: AnimationEvent): void;
    onDone(event: AnimationEvent): void;
}
export {};
